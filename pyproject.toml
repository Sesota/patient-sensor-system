[tool.coverage.run]
branch = true
source = ["."]
omit = [
    "*/migrations/*",
    "*/management/*",
    "*/tests/*",
    "*/scripts/*",
    "manage.py",
]

[tool.coverage.report]
show_missing = true
skip_empty = true
skip_covered = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
norecursedirs = [
    ".*",
    "build",
    ".venv",
    "{arch}",
    "static",
    "scripts",
]
addopts = [
    "--strict-markers",
]

[tool.black]
line-length = 79
target-version = ["py310"]
extend-exclude = '''
/(
  | media
  | migrations
  | static
)/
'''

[tool.pyright]
venv = ".venv"
executionEnvironments = [
  { root = ".", pythonVersion = "3.10" },
]

[tool.mypy]
python_version = "3.10"
allow_redefinition = true
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
ignore_errors = false
implicit_reexport = false
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
plugins = [
  'mypy_django_plugin.main',
  'returns.contrib.mypy.returns_plugin'
]

[tool.django-stubs]
django_settings_module = "config.settings"

[tools.mypy.plugins.django-stubs]
django_settings_module = 'config.settings'

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
